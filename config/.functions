# vim: set filetype=sh:

#
# Removed all temporary trash on the computer
#
function util::empty_trash() {
	sudo rm -rfv /Volumes/*/.Trashes
	sudo rm -rf ~/Library/Mobile Documents/*/.Trash/*
	sudo rm -rfv ~/Library/Mobile\ Documents/**/.Trash/*
	sudo rm -rfv ~/.Trash/*
	sudo rm -rfv /private/var/log/asl/*.asl
	sqlite3 ~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV* 'delete from LSQuarantineEvent'
}

#
# Determine size of a file or total size of a directory
#
function util::fs() {
	if du -b /dev/null > /dev/null 2>&1; then
		local arg=-sbh;
	else
		local arg=-sh;
	fi
	if [[ -n "$@" ]]; then
		du $arg -- "$@";
	else
		du $arg .[^.]* ./*;
	fi;
}

#
# Create a data URL from a file
#
function util::data_url() {
	local mimeType=$(file -b --mime-type "$1");
	if [[ $mimeType == text/* ]]; then
		mimeType="${mimeType};charset=utf-8";
	fi
	echo "data:${mimeType};base64,$(openssl base64 -in "$1" | tr -d '\n')";
}

#
# Extract most known archives with one command
#
function util::extract_file () {
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1     ;;
      *.tar.gz)    tar xzf $1     ;;
      *.bz2)       bunzip2 $1     ;;
      *.rar)       unrar e $1     ;;
      *.gz)        gunzip $1      ;;
      *.tar)       tar xf $1      ;;
      *.tbz2)      tar xjf $1     ;;
      *.tgz)       tar xzf $1     ;;
      *.zip)       unzip $1       ;;
      *.Z)         uncompress $1  ;;
      *.7z)        7z x $1        ;;
      *)     echo "'$1' cannot be extracted " ;;
       esac
   else
       echo "'$1' is not a valid file"
   fi
}